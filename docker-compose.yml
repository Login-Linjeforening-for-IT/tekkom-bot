services:
  tekkom-bot:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app

  tekkom-bot-api:
    container_name: tekkom-bot-api 
    image: tekkom-bot-api
    build:
      context: ./api
      dockerfile: Dockerfile
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    environment:
      DB: ${DB}
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      AUTHENTIK_API_URL: ${AUTHENTIK_API_URL}
      CLIENT_ID: ${AUTHENTIK_CLIENT_ID}
      CLIENT_SECRET: ${CLIENT_SECRET}
      QUEENBEE_URL: ${QUEENBEE_URL}
      REDIRECT_URI: ${REDIRECT_URI}
      TEKKOM_BOT_API_TOKEN: ${TEKKOM_BOT_API_TOKEN}
      TEKKOM_BOT_BTG_TOKEN: ${TEKKOM_BOT_BTG_TOKEN}
      QUEENBEE_BTG_TOKEN: ${QUEENBEE_BTG_TOKEN}
      CRITICAL_ROLE: ${CRITICAL_ROLE}
      WEBHOOK_URL: ${WEBHOOK_URL}
      SPOTIFY_CLIENT_ID: ${SPOTIFY_CLIENT_ID}
      SPOTIFY_CLIENT_SECRET: ${SPOTIFY_CLIENT_SECRET}

  postgres:
    image: postgres:15
    container_name: tekkom-bot_database
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-tekkom-bot}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB:-tekkom-bot}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tekkom-bot -d tekkom-bot"]
      interval: 5s
      retries: 5

volumes:
  postgres_data:
